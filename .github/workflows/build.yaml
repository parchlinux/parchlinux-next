name: Build ISO

on:
  push:
    tags:
      - '*'

jobs:
  build:
    runs-on: ubuntu-latest
    container:
      image: archlinux:latest
      options: --privileged
    outputs:
      hash: ${{ steps.hash.outputs.hash }}
    steps:
      - uses: actions/checkout@v3
      - name: Install Packages via Pacman
        run: |
          pacman -Syu --noconfirm archiso reflector rsync curl
      - name: Change Arch Docker mirror
        run: |
          reflector --verbose --country 'United States' -l 5 --sort rate --save /etc/pacman.d/mirrorlist
      - name: Build image
        run: |
          mkarchiso -v iso/
      - name: Generate hash
        id: hash
        run: |
          cd iso/
          echo "hash=$(sha256sum *.iso | cut -d ' ' -f1)" >> $GITHUB_ENV
      - name: Create Release
        id: create_release
        uses: octokit/request-action@v2.x
        with:
          route: POST /repos/${{ github.repository }}/releases
          body: |
            {
              "tag_name": "${{ github.ref }}",
              "name": "${{ github.ref }}",
              "draft": true
            }
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Upload ISO artifact
        id: upload_asset
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.response.data.upload_url }}
          asset_path: ./iso/*.iso
          asset_name: my-artifact.iso
          asset_content_type: application/octet-stream

  create-release:
    needs: ['build']
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v3
      - name: Download artifact
        uses: actions/download-artifact@v2
        with:
          name: iso
          path: iso
      - name: Generate hash
        id: hash
        run: |
          cd iso/
          sha256="$(sha256sum *.iso)"
          name="$(echo $sha256 | cut -d ' ' -f1)"
          hash="$(echo $sha256 | cut -d ' ' -f2)"
          echo "name=${name}" >> $GITHUB_ENV
          echo "hash=${hash}" >> $GITHUB_ENV
      - name: Create release
        run: |
          gh release create --draft --repo ${{ github.repository }} ${{ github.ref }}
            iso/*.iso --notes "$(git tag -l ${{ github.ref }} --format='(%contents)') | name | sha256 |
            | :---: | :---: |
            | ${{ env.name }} | ${{ env.hash }} |"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
