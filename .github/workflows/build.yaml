name: Build ISO

on:
  push:
    tags:
      - '*'

jobs:
  build:
    runs-on: ubuntu-latest
    container:
      image: archlinux:latest
      options: --privileged
    outputs:
      iso_path: ${{ steps.create-iso.outputs.iso-path }}
      iso_hash: ${{ steps.create-iso.outputs.iso-hash }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Install Packages via Pacman
        run: |
          pacman -Syu archiso reflector rsync curl --noconfirm
          reflector --verbose --country 'United States' -l 5 --sort rate --save /etc/pacman.d/mirrorlist

      - name: Build ISO
        id: create-iso
        run: mkarchiso -v iso/

      - name: Generate ISO Hash
        id: hash
        run: echo "::set-output name=iso-hash::$(sha256sum ${GITHUB_WORKSPACE}/iso/out/*.iso | cut -d ' ' -f1)"

      - name: Set ISO Path Output
        id: set-iso-path
        run: echo "::set-output name=iso-path::${GITHUB_WORKSPACE}/iso/out/"

      - name: Upload ISO Artifact
        uses: actions/upload-artifact@v2
        with:
          name: archlinux.iso
          path: ${{ needs.build.outputs.iso_path }}/*.iso

  create-release:
    needs: [build]
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Download ISO Artifact
        uses: actions/download-artifact@v2
        with:
          name: archlinux.iso
          path: iso

      - name: Get ISO Hash
        id: get-iso-hash
        run: |
          echo "::set-output name=iso-hash::$(sha256sum ${GITHUB_WORKSPACE}/iso/*.iso | cut -d ' ' -f1)"

      - name: Create Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Upload ISO to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create-release.outputs.upload_url }}
          asset_path: ${{ github.workspace }}/iso/*.iso
          asset_name: archlinux.iso
          asset_content_type: application/octet-stream

      - name: Add ISO Hash to Release Description
        uses: actions/github-script@v4
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          script: |
            const hash = '${{ needs.create-release.outputs.iso-hash }}';
            const context = github.context;
            const octokit = github.getOctokit(process.env.GITHUB_TOKEN);
            octokit.repos.createReleaseComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              release_id: context.payload.release.id,
              body: `ISO Hash: \`${hash}\``,
            });
